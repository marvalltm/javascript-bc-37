{"mappings":"AAAA,gKAIC,GAED,6CAA6C;AAC7C,6CAA6C;AAC7C,gDAAgD;AAChD,qBAAqB;AACrB,qBAAqB;AAErB,yCAAyC;AACzC,yEAAyE;AACzE,KAAK;AAEL,gCAAgC;AAChC,uBAAuB;AACvB,8BAA8B;AAC9B,iBAAiB;AACjB,mBAAmB;AACnB,8DAA8D;AAC9D,6EAA6E;AAC7E,oBAAoB;AACpB,aAAa;AACb,SAAS;AACT,iBAAiB;AAEjB,aAAa;AACb,cAAc;AACd,kBAAkB;AAClB,mBAAmB;AACnB,oDAAoD;AACpD,qDAAqD;AACrD,oBAAoB;AACpB,mBAAmB;AACnB,kBAAkB;AAClB,sBAAsB;AACtB,mBAAmB;AACnB,eAAe;AACf,SAAS;AACT,KAAK;AAEL,iCAAiC;AACjC,yBAAyB;AACzB,8DAA8D;AAC9D,KAAK;AACL,6DAA6D;AAC7D,4CAA4C;AAC5C,eAAe;AACf,iBAAiB;AACjB,uEAAuE;AACvE,SAAS;AACT,QAAQ;AACR,KAAK;AACL,uCAAuC;AACvC,oDAAoD;AACpD,4BAA4B;AAC5B,+BAA+B;AAC/B,aAAa;AACb,2BAA2B;AAC3B,MAAM;AACN,6BAA6B;AAE7B,6DAA6D;AAC7D,KAAK;AAEL,iCAAiC;AACjC,qCAAqC;AACrC,yCAAyC;AACzC,+CAA+C;AAC/C,YAAY;AAEZ,qBAAqB;AACrB,uBAAuB;AACvB,aAAa;AAEb,gMAIC,GAGD,iCAAiC;AACjC,yCAAyC;AACzC,uCAAuC","sources":["src/js/index.js"],"sourcesContent":["/**\r\n *  BINANCE TASK 1\r\n *  Заброаты пары монеток, вивести поточный куст.\r\n *  Створити оновлення пар по інтервалу. Малювати стріточку ↓ залежно від курсу ↑\r\n */\r\n\r\n// const baseURL = 'https://api.binance.com';\r\n// const priceRoute = '/api/v3/ticker/price';\r\n// const root = document.querySelector('.root');\r\n// let lastData = [];\r\n// let nextData = [];\r\n\r\n// const filterPairs = (array, part) => {\r\n//   return array.filter(item => item.symbol.includes(part)).slice(0, 9);\r\n// };\r\n\r\n// const makeMarkup = array => {\r\n//   const rows = array\r\n//     .map((item, index) => {\r\n//       return `\r\n//             <tr>\r\n//                 <td class=\"table__item\">${item.symbol}</td>\r\n//                 <td class=\"table__item  ${item.status}\">${item.price}</td>\r\n//             </tr>\r\n//         `;\r\n//     })\r\n//     .join('');\r\n\r\n//   return `\r\n//     <table>\r\n//         <thead>\r\n//             <tr>\r\n//                 <th class=\"table__item\">NAME</th>\r\n//                 <th class=\"table__item\">PRICE</th>\r\n//             </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//             ${rows}\r\n//         </tbody>\r\n//     </table>\r\n//     `;\r\n// };\r\n\r\n// const renderPairs = array => {\r\n//   root.innerHTML = '';\r\n//   root.insertAdjacentHTML('afterbegin', makeMarkup(array));\r\n// };\r\n// const makeCurrentPairsStatus = (lastArray, nextArray) => {\r\n//   return nextArray.map((item, index) => {\r\n//     return {\r\n//       ...item,\r\n//       status: item.price > lastArray[index].price ? 'green' : 'red',\r\n//     };\r\n//   });\r\n// };\r\n// const processBinanceData = data => {\r\n//   const filteredData = filterPairs(data, 'USDT');\r\n//   if (!lastData.length) {\r\n//     lastData = filteredData;\r\n//   } else {\r\n//     lastData = nextData;\r\n//   }\r\n//   nextData = filteredData;\r\n\r\n//   renderPairs(makeCurrentPairsStatus(lastData, nextData));\r\n// };\r\n\r\n// const id = setInterval(() => {\r\n//   fetch(`${baseURL}${priceRoute}`)\r\n//     .then(response => response.json())\r\n//     .then(data => processBinanceData(data));\r\n// }, 5000);\r\n\r\n// setTimeout(() => {\r\n//   clearInterval(id);\r\n// }, 60000);\r\n\r\n/**\r\n *  BINANCE TASK 2\r\n *  Знайти найвигідніші пропозицій по парі монеток. Розрахувати приблизний профіт якщо купити і зразу продати монетку.\r\n *  Створити умовну пагінацію для пар з USDT\r\n */\r\n\r\n\r\n// fetch('http://localhost:3000')\r\n//     .then(response => response.json())\r\n//     .then(data => console.log(data))\r\n\r\n"],"names":[],"version":3,"file":"index.197e9c87.js.map","sourceRoot":"../"}